/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacion;

import java.util.Observable;
import java.util.Observer;

public class Statistics extends javax.swing.JDialog implements Observer{

    /**
     * Creates new form Statistics
     */
    MedicionTiempo temporizador;
    Thread[] threads;
    public Statistics(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        inicio();
    }

    public void inicio(){
        CalculoEstadisticas st1 = new CalculoEstadisticas();
        st1.addObserver(this);
        Thread tst1 = new Thread(st1);
        
//        CalculoEstadisticas st2 = new CalculoEstadisticas();
//        st2.addObserver(this);
//        Thread tst2 = new Thread(st2);
        
        Thread[] ts = {tst1};
        this.temporizador = new MedicionTiempo(ts);
        this.temporizador.addObserver(this);
        this.temporizador.setStart(true);
        Thread thread_temporizador = new Thread(this.temporizador);
        thread_temporizador.start();
        threads = ts;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaStats = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("29BPDJ - Statistics");
        setResizable(false);

        jLabel1.setText("Time:");

        jLabelTime.setText("0 ms");

        jTextAreaStats.setEditable(false);
        jTextAreaStats.setColumns(20);
        jTextAreaStats.setRows(5);
        jTextAreaStats.setFocusable(false);
        jScrollPane1.setViewportView(jTextAreaStats);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTime)
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelTime))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(416, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Statistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Statistics dialog = new Statistics(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Override
    public void update(Observable o, Object arg) {
        String observ = o.getClass().getSimpleName();
        
        if(observ.equalsIgnoreCase("MedicionTiempo")){
              java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    jLabelTime.setText(arg.toString() + " ms");
                    jTextAreaStats.append("Total Visits: "+ Recursos.visitas.size());
                    jTextAreaStats.append("\nThreads used: " + threads.length);
                }
            });
        }else if(observ.equalsIgnoreCase("CalculoEstadisticas")){
                          java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    jTextAreaStats.append(arg.toString());
                    jTextAreaStats.append("\n----------------------------------------------------------------\n");
                }
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaStats;
    // End of variables declaration//GEN-END:variables
}
